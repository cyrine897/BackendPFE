name: CI - SonarCloud + Docker

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-analyze:
    name: Build, SonarCloud Analysis & Docker
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: mezzicyrine027/springboot-app:1.0
     

    steps:
      # 1️⃣ Checkout code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2️⃣ Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      # 3️⃣ Cache SonarCloud
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # 4️⃣ Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # 5️⃣ Build + analyse SonarCloud
      - name: Build & SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=cyrine897_BackendPFE \
            -Dsonar.organization=cyrine897 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN

      # 6️⃣ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 7️⃣ Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 8️⃣ Build and push Docker image
      - name: Build & Push Docker Image
        run: |
          TAG=${GITHUB_SHA}
          docker build -t $IMAGE_NAME:$TAG .
          docker push $IMAGE_NAME:$TAG
          docker tag $IMAGE_NAME:$TAG $IMAGE_NAME:latest
          docker push $IMAGE_NAME:latest
